plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.11'
	id 'io.spring.dependency-management' version '1.1.6'

	id 'nu.studer.jooq' version '5.2'
}
jooq {
	configurations {
		main {
			generationTool {
				jdbc {
					driver = 'oracle.jdbc.OracleDriver'
					url = 'jdbc:oracle:thin:@localhost:1521/XEPDB1'
					user = 'system'
					password = 'oracle'
				}
				generator {
					database {
						name = 'org.jooq.meta.oracle.OracleDatabase'
						includes = 'PERSON'  // Assuming you're generating code for the PERSON table
						forcedTypes = [
								[name: 'INTEGER', expression: '.*\\.ID'],
								[name: 'VARCHAR', expression: '.*']
						]
					}
					target {
						packageName = 'com.example.jooq.generated'
						directory = 'build/generated-sources/jooq'
					}
				}
			}
		}
	}
}

sourceSets {
	main {
		java {
			srcDirs += 'build/generated-sources/jooq'
		}
	}
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.hibernate:hibernate-core:6.3.0.Final'
	implementation 'com.oracle.database.jdbc:ojdbc11:21.9.0.0'

	implementation 'org.jooq:jooq:3.17.0'
	implementation 'org.jooq:jooq-meta:3.17.0'
	implementation 'org.jooq:jooq-codegen:3.17.0'

	jooqGenerator 'com.oracle.database.jdbc:ojdbc11:21.9.0.0'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.3'
}



tasks.named('test') {
	useJUnitPlatform()
}
