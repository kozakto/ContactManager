/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.records;


import com.example.jooq.generated.tables.Person;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonRecord extends UpdatableRecordImpl<PersonRecord> implements Record5<Long, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.person.id</code>.
     */
    public PersonRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.person.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.person.address</code>.
     */
    public PersonRecord setAddress(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.person.address</code>.
     */
    public String getAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.person.first_name</code>.
     */
    public PersonRecord setFirstName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.person.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.person.last_name</code>.
     */
    public PersonRecord setLastName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.person.last_name</code>.
     */
    public String getLastName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.person.phone_number</code>.
     */
    public PersonRecord setPhoneNumber(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.person.phone_number</code>.
     */
    public String getPhoneNumber() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Person.PERSON.ID;
    }

    @Override
    public Field<String> field2() {
        return Person.PERSON.ADDRESS;
    }

    @Override
    public Field<String> field3() {
        return Person.PERSON.FIRST_NAME;
    }

    @Override
    public Field<String> field4() {
        return Person.PERSON.LAST_NAME;
    }

    @Override
    public Field<String> field5() {
        return Person.PERSON.PHONE_NUMBER;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAddress();
    }

    @Override
    public String component3() {
        return getFirstName();
    }

    @Override
    public String component4() {
        return getLastName();
    }

    @Override
    public String component5() {
        return getPhoneNumber();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAddress();
    }

    @Override
    public String value3() {
        return getFirstName();
    }

    @Override
    public String value4() {
        return getLastName();
    }

    @Override
    public String value5() {
        return getPhoneNumber();
    }

    @Override
    public PersonRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PersonRecord value2(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public PersonRecord value3(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public PersonRecord value4(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public PersonRecord value5(String value) {
        setPhoneNumber(value);
        return this;
    }

    @Override
    public PersonRecord values(Long value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonRecord
     */
    public PersonRecord() {
        super(Person.PERSON);
    }

    /**
     * Create a detached, initialised PersonRecord
     */
    public PersonRecord(Long id, String address, String firstName, String lastName, String phoneNumber) {
        super(Person.PERSON);

        setId(id);
        setAddress(address);
        setFirstName(firstName);
        setLastName(lastName);
        setPhoneNumber(phoneNumber);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PersonRecord
     */
    public PersonRecord(com.example.jooq.generated.tables.pojos.Person value) {
        super(Person.PERSON);

        if (value != null) {
            setId(value.getId());
            setAddress(value.getAddress());
            setFirstName(value.getFirstName());
            setLastName(value.getLastName());
            setPhoneNumber(value.getPhoneNumber());
            resetChangedOnNotNull();
        }
    }
}
